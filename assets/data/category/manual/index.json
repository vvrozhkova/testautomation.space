{"hash":"e324e4f51e2bec9441532a52e09a19a7fc23f811","data":{"category":{"title":"manual","path":"/category/manual/","belongsTo":{"totalCount":2,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"5b2f35cd39a557d147d58071eed7e641","title":"Тестирование, Quality control, Quality assurance","content":"\nПроцесс Тестирование является частью Quality Control, а Quality Control частью Quality Assurance.\n\n## Обеспечение качества (Quality Assurance)\n\nАктивности, направленные на обеспечение уверенности в том, что требования к качеству будут выполнены. [[Глоссарий ISTQB](https://glossary.istqb.org/ru/search/%D0%9E%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BA%D0%B0%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B0)]\n\n**QA (Quality Assurance, обеспечение качества)** – это, собственно, весь комплекс процессов, обеспечивающих качество, наиболее обширное понятие. QA интегрировано во все этапы разработки: от описания проекта до тестирования, релиза и даже пост-релизного обслуживания.\n\nЭто уже проактивная работа, т.к. **_основная задача  обеспечения качества_** – это выстроить систему, которая будет превентивно работать на качество продукта, чтобы при тестировании количество дефектов было минимальным. \n\nВ зависимости от специфики проекта сюда может включаться тестирование документации, подготовка и установка стандартов, анализ качества, выбор инструментов, ревью кода на соответствие стандартам, внедрение каких-то методик по работе с качеством, коммуникационные активности и проч. \n\nЗанимаются Lead специалисты либо менеджеры.\n\n## Контроль качества (Quality Control)\n\nНабор действий, предназначенных для оценивания качества компонента или системы. [[Глоссарий ISTQB](https://glossary.istqb.org/ru/search/%D0%9A%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D1%8C%20%D0%BA%D0%B0%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B0)]\n\n**QC (Quality Control, контроль качества)** – это часть комплекса QA, которая отвечает за анализ результатов тестирования, поиск ошибок и их устранение. В него входят различные процессы, такие как анализ кода, технические обзоры, анализ дизайна, тестирование и прочее.\n\nQuality Control обеспечивает не только проверку продукта на соответствие требованиям, но и соответствие заранее согласованному уровню качества продукта и готовность к выпуску продукта в продакшен. \nЭто совокупность действий, проводимых над продуктом в процессе разработки, для получения информации о его актуальном состоянии в разрезах:\n- готовность продукта к выпуску,\n- соответствие зафиксированным требованиям,\n- соответствие заявленному уровню качества продукта. \n\n**_Основная задача контроля качества_** – предоставить объективную картину того, что происходит с качеством продукта на разных этапах разработки. \n\nЗанимаются middle специалисты.\n\n## Тестирование программного обеспечения\n\nПроцесс, содержащий все активности жизненного цикла, как динамические, так и статические, касающиеся планирования, подготовки и оценки компонента или системы и связанных с этим результатов работ с целью определить, что они соответствуют описанным требованиям, показать, что они пригодны для заявленных целей и для определения дефектов. [[Глоссарий ISTQB](https://glossary.istqb.org/ru/search/%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)]\n\n**Testing (Тестирование)** – это уже непосредственно процесс проверки результатов работы на соответствие установленным требованиям. А тестировщик — это специалист, который занимается такой проверкой. Он тестирует компоненты продукта или весь продукт целиком на предмет ошибок или неточностей разработки. Тестирование — один из ключевых процессов в системе обеспечения качества.\n\nПо факту это реактивная работа (выдали – проверил – описал дефекты – исправили), которая может помочь исправить дефекты в уже созданном программном обеспечении, но не более того. Это не значит, что тестирование – это просто (наоборот, профессиональные тестировщики – какие-то сверхлюди, по-моему), но это самая база и минимум, без которого выпускать продукт в принципе нельзя.\n\n**_Основная задача тестирования_** – выявить и зафиксировать дефекты.  \nМогут заниматься junior специалисты.\n\n\n## Пример\n\n**Требование**: В поставляемых тестовых документах должны отсутсвовать персональные данные сотрудников (фамилия и имя)\n\n**_Тестирование_**: Перед окончательным этапом поставки проверяем документацию на отсутсвие персональных данных по заранее составленному списку\n\nНо что делать, если вдруг сотрудник поменял Фамилию или пришел новый сотрудник? \n\n**_Контроль качества_**: Меняем процессы таким образом чтобы в случае если сотрудник поменял Фамилию или пришел новый сотрудник, эти данные добавлялись в текущий список\n\n**_Обеспечение качества_**: Для того чтобы предотвратить попадание ФИО наших сотрудников в тестовые данные мы переходим на процедурную генерацию ФИО. Тестировщикам больше не надо придумывать ФИО для заполнения полей, за них это сделает процедура. Более того, тестировщикам запрещено использовать данные полученные не из процедуры.\n\nВсе эти меры обеспечивают нам уверенность в том, что требование «В поставляемых тестах отсутствуют персональные данные» будет выполнено. Но важно понимать, что это никак не отменяет тестирования выходных данных на наличие ПД.\n\n## Цели тестирования\n- Повысить вероятность того, что приложение, предназначенное для тестирования, будет работать правильно при любых обстоятельствах.\n- Повысить вероятность того, что приложение, предназначенное для тестирования, будет соответствовать всем описанным требованиям.\n- Предоставление актуальной информации о состоянии продукта на данный момент.\n\n#### Источники информации\n\n1. ❗ [Artsiom Rusau QA Life: Тестировщик с нуля / Урок 3. QA, QC, тестирование. Верификация и валидация](https://youtu.be/f3Yjzjsh0aM)\n2. ❗ [Профессия тестировщик: разбираемся в QA, QC и testing](https://tproger.ru/blogs/qa-qc-tester-career/)\n3. ❗ [Что такое качество. Разбираемся в иерархии терминов «QA», «QC» и «тестирование»](https://habr.com/ru/company/rostelecom/blog/647963/)","date":"2022-05-24T00:00:00.000Z","icon":"fas fa-bug","image":"null","path":"/testirovanie-quality-control-quality-assurance/","order":1,"category":{"title":"manual","path":"/category/manual/"},"tags":[{"title":"тестирование","path":"/tag/%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/"},{"title":"Quality control","path":"/tag/Quality%20control/"},{"title":"Quality assurance","path":"/tag/Quality%20assurance/"}],"headings":[{"value":"Обеспечение качества (Quality Assurance)","anchor":"#обеспечение-качества-quality-assurance"},{"value":"Контроль качества (Quality Control)","anchor":"#контроль-качества-quality-control"},{"value":"Тестирование программного обеспечения","anchor":"#тестирование-программного-обеспечения"},{"value":"Пример","anchor":"#пример"},{"value":"Цели тестирования","anchor":"#цели-тестирования"}]}},{"node":{"id":"dd0aca15e54bf0155faa620df1fe9e71","title":"Понятие качества, международные стандарты качества","content":"\n## Качество программного обеспечения (Software Quality) по ISTQB\n\nСтепень того, насколько компонент или система соответствует сформулированным и подразумеваемым потребностям различных заинтересованных лиц. [[Глоссарий ISTQB](https://glossary.istqb.org/ru/search/%D0%BA%D0%B0%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%BE)]\n\n## Типы стандартов\n\n**Международные стандарты:**\n- ISO(International Organization for Standardization)/IEC(International Electrotechnical Commission)\n- IEEE(Institute of Electrical and Electronic Engineers.)\n- CMM(Capability Maturity Model - Модель Зрелости Процессов)/CMMI(Capability Maturity Model Integration - Интегрированная Модель Зрелости Процессов)\n\n**Национальные**\n- ГОСТ (применяется на уровне СНГ)\n- ГОСТ Р(РФ), СТБ(Беларуссия), ДСТУ(Украина)\n- BS (British Standard - применяются в Европе)\n\n**Отраслевые** (межнациональные)\n- DO-178B\n\n**Псевдостандарты - \"Стандарты де-факто\"** - стандарты которые были разработаны некоторыми организациями, а потом широко распространились среди какой то отрасли и(или) среди какой-то группы специалистов.\n- PMBOK - Project Menegement Body Of Knoledge, SWEBOK - SoftWare Enginering Body Of Knoledge\nНе имеют юридической силы. Могут иногда использоваться для сертификации, но эта сертификация не очень формальная и держится на уважении к какой-то организации.\n\n**Локальные стандарты внутри организации**\n- регламенты, правила, методики\n\nИмеют для отдельно взятой организации такую же силу как и внешние стандарты. Чаще всего разрабатываются на основе какого-то общепринятого стандарта, модифицированного под нужды конкретной организации.\n\n**Модели**\n- MSF, RUP, XP\n\n**Стандарты для людей**\n- ISTQB - International Software Testing Qualifications Board - подтверждает, что человек(специалист) обладает нужными характеристиками.\n\n## Определение качества ПО по международным стандартам\n\n### ISO/IEC 25010:2011 (ГОСТ Р ИСО/МЭК 25010-2015) Systems and software Quality Requirements and Evaluation (SQuaRE) - Продуктовый стандарт\n#### Требования и оценка качества систем и программного обеспечения (SQuaRE). Модели качества систем и программных продуктов\n\nСерия международных стандартов **_ISO/IEC 25000_**, также известных как _SQuaRE (System and Software Quality Requirements and Evaluation)_, определяет характеристики, по которым оценивается качество программного продукта.\n\nОбновленный стандарт **_ISO/IEC 25010_** содержит терминологию для определения, измерения и оценки качества систем и программных продуктов.  \nОн представляет восемь характеристик качества программного обеспечения, среди которых:   \n- функциональная пригодность\n- уровень производительности\n- совместимость \n- удобство использования\n- надежность\n- безопасность\n- удобство сопровождения\n- портативность\n\nСтандарт _ISO/IEC 25010_ является серьезным пересмотром стандарта _ISO/IEC 9126_. В новый стандарт добавлены дополнительные характеристики и подхарактеристики, которые более подробно описывают процесс качества программного продукта, а также введены уточнения и перегруппировка характеристик для более ясного их понимания.\n\n**Качество программного обеспечения (software quality)**: Степень удовлетворения программным продуктом заявленных и подразумеваемых потребностей при использовании в указанных условиях.\n\n### 1061-1998 IEEE Standard for Software Quality Metrics Methodology\nКачество программного обеспечения - это степень, в которой ПО обладает требуемой комбинацией свойств.\n\n\n### ISO 9000:2000 Quality Management and Quality Assurance\nКачество программного обеспечения - совокупность свойств и характеристик продукции или услуги, которые придают им способность удовлетворять обусловленные или предполагаемые потребности потребителя.\n\n## Характеристики качества ПО по стандарту ISO/IEC 25010\n\n1. **Функциональная Пригодность (Functional Suitability)**\n\nСтепень, в которой продукт или система обеспечивают выполнение функции в соответствии с заявленными и подразумеваемыми потребностями при использовании в указанных условиях.\n\n- **_функциональная полнота (functional completeness)_**: Степень покрытия совокупностью функций всех определенных задач и целей пользователя.\n- **_функциональная корректность (functional correctness)_**: Степень обеспечения продуктом или системой необходимой степени точности корректных результатов.\n- **_функциональная целесообразность (functional appropriateness)_**: Степень функционального упрощения выполнения определенных задач и достижения целей.\n\n_Пример:_ Для решения задачи пользователю предоставляется возможность выполнять только необходимые шаги, исключая любые ненужные.\n\n2. **Уровень Производительности (Performance Efficiency)**\n\nПроизводительность относительно суммы использованных при определенных условиях ресурсов[^Ресурсы могут включать в себя другие программные продукты, конфигурацию программного и аппаратного обеспечения системы и материалы (например, бумагу для печати, носители)].\n\n- **_временные характеристики (time behaviour)_**: Степень соответствия требованиям по времени отклика, времени обработки и показателей пропускной способности продукта или системы.\n- **_использование ресурсов (resource utilization)_**: Степень удовлетворения требований по потреблению объемов и видов ресурсов продуктом или системой при выполнении их функций.\n- **_потенциальные возможности (capacity)_**: Степень соответствия требованиям предельных значений параметров[^В качестве параметров могут быть возможное количество сохраняемых элементов, количество параллельно работающих пользователей, емкость канала, пропускная способность по транзакциям и размер базы данных] продукта или системы.\n\n3. **Совместимость (Compatibility)**\n\nСпособность продукта, системы или компонента обмениваться информацией с другими продуктами, системами или компонентами, и/или выполнять требуемые функции при совместном использовании одних и тех же аппаратных средств или программной среды.\n\n- **_сосуществование (совместимость) (co-existence)_**: Способность продукта совместно функционировать с другими независимыми продуктами в общей среде с разделением общих ресурсов и без отрицательного влияния на любой другой продукт.\n- **_функциональная совместимость (интероперабельность) (interoperability)_**: Способность двух или более систем, продуктов или компонент обмениваться информацией и использовать такую информацию.\n\n4. **Удобство Использования (Usability)**\n\nСтепень, в которой продукт или система могут быть использованы определенными пользователями для достижения конкретных целей с эффективностью, результативностью и удовлетворенностью в заданном контексте использования.\n\n- **_определимость пригодности (appropriateness recognizability)_**: Возможность пользователей понять, подходит ли продукт или система для их потребностей, сравним ли с функциональной целесообразностью (functional appropriateness).\nОпределимость пригодности зависит от возможности распознать уместность продукта или функций системы от первоначальных впечатлений о продукте или системе и/или от какой-либо связанной с ними документации.\n- **_изучаемость (learnability)_**: Возможность использования продукта или системы определенными пользователями для достижения конкретных целей обучения для эксплуатации продукта или системы с эффективностью, результативностью, свободой от риска и в соответствии с требованиями в указанном контексте использования.\n- **_управляемость (operability)_**: Наличие в продукте или системе атрибутов, обеспечивающих простое управление и контроль.\n- **_защищенность от ошибки пользователя (user error protection)_**: Уровень системной защиты пользователей от ошибок.\n- **_эстетика пользовательского интерфейса (user interface aesthetics)_**: Степень \"приятности\" и \"удовлетворенности\" пользователя интерфейсом взаимодействия с пользователем.\n- **_доступность (accessibility)_**: Возможность использования продукта или системы для достижения определенной цели в указанном контексте использования широким кругом людей с самыми разными возможностями[^В диапазон возможностей входят ограничения возможностей, связанные с возрастом].\n\n5. **Надежность (Reliability)**\n\nСтепень выполнения системой, продуктом или компонентом определенных функций при указанных условиях в течение установленного периода времени.\nВ программном обеспечении износа не происходит. Проблемы с надежностью возникают из-за недостатков в требованиях, при разработке и реализации или из-за изменений условий использования.\n\n- **_завершенность (maturity)_**: Степень соответствия системы, продукта или компонента при нормальной работе требованиям надежности.\n- **_готовность (availability)_**: Степень работоспособности и доступности системы, продукта или компонента.\nВ общем, готовность можно оценить как долю общего времени, в течение которого система, продукт или компонент находятся в работающем состоянии. Готовность, таким образом, определяется сочетанием завершенности, которая определяет частоту отказов, отказоустойчивости и восстанавливаемости, которая, в свою очередь, определяет продолжительность времени бездействия после каждого отказа.\n- **_отказоустойчивость (fault tolerance)_**: Способность системы, продукта или компонента работать как предназначено, несмотря на наличие дефектов программного обеспечения или аппаратных средств.\n- **_восстанавливаемость (recoverability)_**: Способность продукта или системы восстановить данные и требуемое состояние системы в случае прерывания или сбоя.\nВ некоторых случаях после сбоя вычислительная система находится в нерабочем состоянии некоторое время, продолжительность которого определяется ее восстанавливаемостью.\n\n6. **Защита, защищенность (Security)**\n\nСтепень защищенности информации и данных, обеспечиваемая продуктом или системой путем ограничения доступа людей, других продуктов или систем к данным в соответствии с типами и уровнями авторизации.\n\nЗащищенность применима также и к данным при передаче в случаях, когда данные сохраняются непосредственно в продукте или системе или вне их.\n\n_Жизнестойкость (survivability)_ (степень, в которой продукт или система продолжают выполнять свою миссию, предоставляя основные услуги своевременно, несмотря на присутствие атак) обеспечивается восстанавливаемостью.\n\n_Защищенность, иммунитет (immunity)_ (степень устойчивости продукта или системы к атакам) обеспечивается целостностью.\n\n_Защищенность (security)_ вносит свой вклад в доверие (trust).\n\n\n- **_конфиденциальность (confidentiality)_**: Обеспечение продуктом или системой ограничения доступа к данным только для тех, кому доступ разрешен.\n- **_целостность (integrity)_**: Степень предотвращения системой, продуктом или компонентом несанкционированного доступа или модификации компьютерных программ или данных.\n- **_неподдельность (non-repudiation)_**: Степень, с которой может быть доказан факт события или действия таким образом, что этот факт не может быть отвергнут когда-либо позже.\n- **_отслеживаемость (accountability)_**: Степень, до которой действия объекта могут быть прослежены однозначно.\n- **_подлинность (authenticity)_**: Степень достоверности тождественности объекта или ресурса требуемому объекту или ресурсу.\n\n7. **Сопровождаемость, модифицируемость (Maintainability)**\n\nРезультативность и эффективность, с которыми продукт или система могут быть модифицированы предполагаемыми специалистами по обслуживанию.\n\nМодификация может включать в себя исправления, улучшения или адаптацию программного обеспечения к изменениям в условиях использования, в требованиях и функциональных спецификациях. Модификации могут быть выполнены как специализированным техническим персоналом, так и рабочим или операционным персоналом и конечными пользователями.\n\nСопровождаемость включает в себя установку разного рода обновлений.\n\nСопровождаемость можно интерпретировать либо как присущее продукту или системе свойство, упрощающее процесс обслуживания, либо как качество при использовании, проверенное на практике специалистами по обслуживанию в целях поддержки продукта или системы.\n\n- **_модульность (modularity)_**: Степень представления системы или компьютерной программы в виде отдельных блоков таким образом, чтобы изменение одного компонента оказывало минимальное воздействие на другие компоненты.\n- **_возможность многократного использования (reusability)_**: Степень, в которой актив может быть использован в нескольких системах или в создании других активов.\n- **_анализируемость (analysability)_**: Степень простоты оценки влияния изменений одной или более частей на продукт или систему или простоты диагностики продукта для выявления недостатков и причин отказов, или простоты идентификации частей, подлежащих изменению.\n Конкретная реализация продукта или системы может включать в себя механизмы анализа собственных дефектов и формирования отчетов об отказах и других событиях.\n- **_модифицируемость (modifiabiIity)_**: Степень простоты эффективного и рационального изменения продукта или системы без добавления дефектов и снижения качества продукта.\n  - Реализация модификации включает в себя кодирование, разработку, документирование и проверку изменений.\n  - Модульность и анализируемость могут оказывать влияние на модифицируемость.\n  - Модифицируемость - это сочетание изменяемости и устойчивости.\n- **_тестируемость (testability)_**: Степень простоты эффективного и рационального определения для системы, продукта или компонента критериев тестирования, а также простоты выполнения тестирования с целью определения соответствия этим критериям.\n\n8. **Переносимость, мобильность (Portability)**\n\nСтепень простоты эффективного и рационального переноса системы, продукта или компонента из одной среды (аппаратных средств, программного обеспечения, операционных условий или условий использования) в другую.\n\nПереносимость можно интерпретировать либо как присущее продукту или системе свойство продукта или системы, упрощающее процесс переноса, либо как качество при использовании, предназначенное для переноса продукта или системы.\n\n- **_адаптируемость (adaptability)_**: Степень простоты эффективной и рациональной адаптации для отличающихся или усовершенствованных аппаратных средств, программного обеспечения, других операционных сред или условий использования.\nВ адаптируемость входит и масштабируемость внутренних потенциальных возможностей (например, экранных полей, таблиц, объемов транзакции, форматов отчетов и т.д.).\nАдаптация может быть выполнена как специализированным техническим персоналом, так и рабочим или операционным персоналом и конечными пользователями.\nЕсли система должна быть адаптирована конечным пользователем, то адаптируемость соответствует пригодности для индивидуализации, как это определено в ИСО 9241-110.\n- **_устанавливаемость (installability)_**: Степень простоты эффективной и рациональной, успешной установки и/или удаления продукта или системы в заданной среде.\nВ случае если продукт или система должны устанавливаться конечным пользователем, устанавливаемость может повлиять на результирующие функциональную целесообразность и управляемость.\n- **_взаимозаменяемость (replaceability)_**: Способность продукта заменить другой конкретный программный продукт для достижения тех же целей в тех же условиях.\nВзаимозаменяемость новой версии программного продукта важна для пользователя при обновлении продукта.\nВо взаимозаменяемость могут быть включены атрибуты как устанавливоемости, так и адаптируемости. Понятие было введено как отдельная подхарактеристика из-за ее важности.\nВзаимозаменяемость снижает риск блокировки таким образом, что, например, при стандартизации форматов файлов допускается применение других программных продуктов вместо используемого.\n\n\n\n#### Источники информации\n\n1. ❗ [ГОСТ Р ИСО/МЭК 25010-2015](https://docs.cntd.ru/document/1200121069)\n\n2. ❗ [Тестирование ПО: Стандарты в области тестирования и их применение на практике](https://youtu.be/kUvPuJuPI-g)\n\n#### Дополнительно можно посмотреть:\n\n❗ [Computer Science Center: Лекция 13. Качество ПО](https://youtu.be/zAxGTb0FFR0)\n","date":"2022-05-25T00:00:00.000Z","icon":"fas fa-bug","image":"null","path":"/ponyatie-kachestva-mezhdunarodnye-standarty-kachestva/","order":2,"category":{"title":"manual","path":"/category/manual/"},"tags":[{"title":"качество","path":"/tag/%D0%BA%D0%B0%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%BE/"},{"title":"международные стандарты качества","path":"/tag/%D0%BC%D0%B5%D0%B6%D0%B4%D1%83%D0%BD%D0%B0%D1%80%D0%BE%D0%B4%D0%BD%D1%8B%D0%B5%20%D1%81%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82%D1%8B%20%D0%BA%D0%B0%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B0/"}],"headings":[{"value":"Качество программного обеспечения (Software Quality) по ISTQB","anchor":"#качество-программного-обеспечения-software-quality-по-istqb"},{"value":"Типы стандартов","anchor":"#типы-стандартов"},{"value":"Определение качества ПО по международным стандартам","anchor":"#определение-качества-по-по-международным-стандартам"},{"value":"Характеристики качества ПО по стандарту ISO/IEC 25010","anchor":"#характеристики-качества-по-по-стандарту-isoiec-25010"}]}}]}},"relatedCategory":{"id":"603a2c0d964c5170463a1125f6911641","title":"manual","path":"/category/manual/","related":[{"id":"mobile","path":"/category/mobile/","title":"mobile"},{"id":"api","path":"/category/api/","title":"api"}]}},"context":{}}