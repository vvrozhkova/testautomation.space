{"hash":"84ff211b7c6d9fc18dc1380cbe0fca5225ead0ae","data":{"post":{"title":"REST и SOAP","content":"\n## API\nAPI - это контракт, который предоставляет программа: какие операции можно выполнять.\n\nAPI включает:\n- операции которые можно проводить\n- данные которые подаются на вход\n- данные которые предоставляются на выходе\n\nAPI - набор функций. \n\nAPI  входа, API отчетности, API платежек и тд\nили одно общее API.\n\nНа каждое API есть контракт который говорит какие функции можно выполнять.\n\nДля SOAP таким контрактом является wsdl, для REST - wadl.\n\nОписание функций которые мы можем использовать. Одни и теже функции можно использовать в разных API.\n\nВызвать API можно напрямую или косвенно.\n\nНапрямую:\n- система вызывает функции внутри себя;\n- одна система вызывает метод другой системы;\n- в автотестах;\n\nКосвенно:\n- пользователь работает с GUI;\n\nТестирование (через) API\n\nКогда одна система общается с другой по протоколу(HTTP, GMS) передачи данных - это называется remote API(общение по сети).\nЕсть еще shared memory API - это когда программа общается в одной виртуальной памяти\n\nSOAP\nПередает сообщение в xml формате. \nWSDL - это список всех методов которые нам доступны через SOAP.\n\n## REST и SOAP\n\nREST и SOAP на самом деле не сопоставимы. REST — это архитектурный стиль. SOAP — это формат обмена сообщениями. Давайте сравним популярные реализации стилей REST и SOAP.\n\nREST означает REpresentational State Transfer (Википедия: «передача состояния представления»). Это популярный архитектурный подход для создания API в современном мире.\n\nПример реализации RESTful: JSON через HTTP;  \nПример реализации SOAP: XML поверх SOAP через HTTP;\n\nНа верхнем уровне SOAP ограничивает структуры ваших сообщений, тогда как REST — это архитектурный подход, ориентированный на использование HTTP в качестве транспортного протокола.\n\nСпецифика SOAP — это формат обмена данными. С SOAP это всегда SOAP-XML, который представляет собой XML, включающий:\n- Envelope (конверт) – корневой элемент, который определяет сообщение и пространство имен, использованное в документе,\n- Header (заголовок) – содержит атрибуты сообщения, например: информация о безопасности или о сетевой маршрутизации,\n- Body (тело) – содержит сообщение, которым обмениваются приложения,\n- Fault – необязательный элемент, который предоставляет информацию об ошибках, которые произошли при обработке сообщений. И запрос, и ответ должны соответствовать структуре SOAP.\n\nСпецифика REST — использование HTTP в качестве транспортного протокола. Он подразумевает наилучшее использование функций, предоставляемых HTTP - методы запросов, заголовки запросов, ответы, заголовки ответов и т. д.\n\n### Формат обмена сообщениями\n\nВ SOAP вы используете формат SOAP XML для запросов и ответов.\nВ REST такого фиксированного формата нет. Вы можете обмениваться сообщениями на основе XML, JSON или любого другого удобного формата. JSON является самым популярным среди используемых форматов.\n\n### Определения услуг\n\nSOAP использует WSDL (Web Services Description Language) — язык описания веб-сервисов и доступа к ним, основанный на языке XML.\nREST не имеет стандартного языка определения сервиса. Несмотря на то, что WADL был одним из первых предложенных стандартов, он не очень популярен. Более популярно использование Swagger или Open API.\n\n### Транспорт\n\nSOAP не накладывает никаких ограничений на тип транспортного протокола. Вы можете использовать либо Web протокол HTTP, либо MQ.\n\nREST подразумевает наилучшее использование транспортного протокола HTTP\n\nПростота реализации\n\nRESTFful веб-сервисы, как правило, гораздо проще реализовать, чем веб-сервисы на основе SOAP.\n\nREST обычно использует JSON, который легче анализировать и обрабатывать. В дополнение к этому, REST не требует наличия определения службы для предоставления веб-службы.\nОднако в случае SOAP вам необходимо определить свой сервис с использованием WSDL, и при обработке и анализе сообщений SOAP-XML возникают большие накладные расходы.","description":"REST и SOAP","image":"null","category":{"id":"api","title":"api","path":"/category/api/"},"date":"24/06/2022","path":"/rest-i-soap/","links":[{"title":"","items":[{"title":"Понимание клиент-серверной архитектуры","link":"/ponimanie-klient-servernoj-arhitektury/"},{"title":"Взаимодействие сервера, клиента и БД","link":"/vzaimodejstvie-servera-klienta-i-bd/"},{"title":"REST и SOAP","link":"/rest-i-soap/"}]}],"headings":[{"value":"API","anchor":"#api"},{"value":"REST и SOAP","anchor":"#rest-и-soap"}],"subtitles":[{"depth":2,"value":"API","anchor":"#api"},{"depth":2,"value":"REST и SOAP","anchor":"#rest-и-soap"},{"depth":3,"value":"Формат обмена сообщениями","anchor":"#формат-обмена-сообщениями"},{"depth":3,"value":"Определения услуг","anchor":"#определения-услуг"},{"depth":3,"value":"Транспорт","anchor":"#транспорт"}],"tags":[{"id":"api","title":"api","path":"/tag/api/"}]},"comments":{"edges":[]}},"context":{}}